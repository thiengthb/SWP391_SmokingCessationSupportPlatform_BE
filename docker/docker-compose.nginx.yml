version: '3.8'

services:
  mysql:
    image: mysql
    container_name: mysql-db-ctn
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app_net
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql-db-ctn
    ports:
      - "4000:80"
    networks:
      - app_net

  redis:
    image: redis
    container_name: redis-cache-ctn
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_net
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot-1: &springboot-1
    image: springboot-1:latest
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: springboot-1-con
    environment:
      - SERVER_PORT=8081
    env_file:
      - .env.docker
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  springboot-2:
    <<: *springboot-1
    image: springboot-2:latest
    container_name: springboot-2-con
    environment:
      - SERVER_PORT=8082
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      springboot-1:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  springboot-3:
    <<: *springboot-1
    image: springboot-3:latest
    container_name: springboot-3-con
    environment:
      - SERVER_PORT=8083
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      springboot-2:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx
    container_name: nginx-app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      springboot-3:
        condition: service_healthy
    networks:
      - app_net

volumes:
  mysql_data:
  redis_data:

networks:
  app_net:
    driver: bridge
